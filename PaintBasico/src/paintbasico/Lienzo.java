/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package paintbasico;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import static paintbasico.Lienzo.herramientas.*;

/**
 *
 * @author alejandro
 */
public class Lienzo extends javax.swing.JPanel {

    Point pInicial,pFinal;    // Almacenar Punto donde se hace click
    Color c;    // Color    
    herramientas h;
    boolean relleno,limpiar;
    
    
    enum herramientas {
     LAPIZ, LINEA, RECTANGULO, OVALO
    }

    public Lienzo() {
        initComponents();
        c = Color.black;
        h = LAPIZ;
        relleno = false;
        limpiar = false;
    }
    
    public void limpiar(){
        pInicial = pFinal = null;
        this.repaint();
    }
    
    public void setColor(Color co){
        c = co;
    }
    
    public void setHerramientas(herramientas he)
    {
        h = he;
    }
    
    public void setRelleno(boolean re)
    {
        relleno = re;
    }
    
    @Override
    public void paint (Graphics g)
    {
        super.paint(g);
        
        setForeground(c);   // Para cambiar el color


        switch(h){

            case LAPIZ:
                if(pInicial!=null)
                    g.fillOval(pInicial.x-5,pInicial.y - 5, 10, 10);
                break;

            case LINEA:
                if(pInicial!=null && pFinal!=null)
                    g.drawLine(pInicial.x-5, pInicial.y-5, pFinal.x-5, pFinal.y-5);
                break;

            case RECTANGULO:
                if(pInicial!=null && pFinal!=null)
                {
                    int ancho =  (pInicial.x - pFinal.x);
                    int altura = (pInicial.y - pFinal.y);

                    int anc = Math.abs(ancho);
                    int alt = Math.abs(altura);

                    int x = ancho < 0 ? pInicial.x :  pFinal.x;
                    int y = altura < 0 ? pInicial.y :  pFinal.y;


                    if(relleno)
                        g.fillRect(x, y, anc, alt);
                    else
                        g.drawRect(x, y, anc, alt);

                }
                break;

            case OVALO:
                if(pInicial!=null && pFinal!=null)
                {
                    int ancho =  (pInicial.x - pFinal.x);
                    int altura = (pInicial.y - pFinal.y);

                    int anc = Math.abs(ancho);
                    int alt = Math.abs(altura);

                    int x = ancho < 0 ? pInicial.x :  pFinal.x;
                    int y = altura < 0 ? pInicial.y :  pFinal.y;


                    if(relleno)
                        g.fillOval(x, y, anc, alt);
                    else
                        g.drawOval(x, y, anc, alt);

                }
                break;


        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(254, 254, 254));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

        switch(h){
            
            case LAPIZ:
                pInicial = evt.getPoint();
                this.repaint();
                break;
 

            
        }
        
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        switch(h){
            
            case LINEA:
                pFinal = evt.getPoint();
                this.repaint();
                break;  
            case RECTANGULO:
                    pFinal = evt.getPoint();
                   this.repaint();
                   break;
            case OVALO:
                    pFinal = evt.getPoint();
                   this.repaint();
                   break;
        }


    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased



    }//GEN-LAST:event_formMouseReleased

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        
        switch(h){
            case LINEA:
                pInicial = evt.getPoint();
                break;
            case RECTANGULO:
                pInicial = evt.getPoint();
                break;
            case OVALO:
                pInicial = evt.getPoint();
                break;
                
        }
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
